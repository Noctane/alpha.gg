import React from "react";
import type { NextPage } from "next";
import { useRouter } from "next/router";
import Head from "next/head";
import { trpc } from "../../utils/trpc";
import { format } from "date-fns";

const Home: NextPage = () => {
  const { query } = useRouter();
  const { data } = trpc.users.getById.useQuery(query.id as string);

  return (
    <>
      <Head>
        <title>Alpha Gang&Games</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto flex min-h-screen flex-col items-center justify-start p-4 pt-16">
        <h1 className="mb-8 text-4xl text-slate-50">Hello {data?.name}</h1>
        <div className="flex justify-between">
          <div className="mx-2 w-1/2 rounded-lg bg-slate-800 px-4 py-4 shadow-md">
            <h2 className="mb-2 text-2xl text-slate-50">Worldle</h2>
            {data && data.worldle.length ? (
              <table className="border-collapse border border-slate-500 bg-slate-800">
                <thead>
                  <tr>
                    <th className="w-1/2 border border-slate-600 p-4 text-left font-semibold text-slate-200">
                      Date
                    </th>
                    <th className="w-1/2 border border-slate-600 p-4 text-left font-semibold text-slate-200">
                      Score
                    </th>
                  </tr>
                </thead>
                <tbody>
                  {data.worldle.map((worldle) => (
                    <tr key={worldle.id}>
                      <td className="border border-slate-700 p-4 text-center text-slate-400">
                        {format(worldle.createdAt, "dd/MM/yyyy")}
                      </td>
                      <td className="border border-slate-700 p-4 text-center text-slate-400">
                        {worldle.score}
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            ) : (
              <p>Aucune donnée</p>
            )}
          </div>
          <div className="mx-2 w-1/2 rounded-lg bg-slate-800 px-4 py-4 shadow-md">
            <h2 className="mb-2 text-2xl text-slate-50">Sutom</h2>
            {data && data.worldle.length ? (
              <table className="border-collapse border border-slate-500 bg-slate-800">
                <thead>
                  <tr>
                    <th className="w-1/2 border border-slate-600 p-4 text-left font-semibold text-slate-200">
                      Date
                    </th>
                    <th className="w-1/2 border border-slate-600 p-4 text-left font-semibold text-slate-200">
                      Score
                    </th>
                  </tr>
                </thead>
                <tbody>
                  {data.sutom.map((sutom) => (
                    <tr key={sutom.id}>
                      <td className="border border-slate-700 p-4 text-center text-slate-400">
                        {format(sutom.createdAt, "dd/MM/yyyy")}
                      </td>
                      <td className="border border-slate-700 p-4 text-center text-slate-400">
                        {sutom.score}
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            ) : (
              <p>Aucune donnée</p>
            )}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
